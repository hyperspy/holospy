[build-system]
requires = ["setuptools>=64", "setuptools_scm>=8", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "holospy"
description = "Analysis of (off-axis) electron holography data with HyperSpy."
requires-python = ">=3.8"
readme = "README.md"
keywords=[
    "python",
    "hyperspy",
    "data analysis",
    "microscopy",
    "electron microscopy",
    "electron holography",
    "Off-axis holography",
    "STEM",
    "TEM",
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "Intended Audience :: Science/Research",
  "Topic :: Software Development :: Libraries",
  "Topic :: Scientific/Engineering",
  "Topic :: Scientific/Engineering :: Physics",
  "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
]
dependencies = [
  "hyperspy>=2.0rc0",
  "numpy>=1.20.0",
  "pint>=0.10",
  "scipy>=1.5.0",
]
dynamic = ["version"]

[project.entry-points."hyperspy.extensions"]
holospy = "holospy"

[project.license]
file = "LICENSE"

[project.optional-dependencies]
tests = [
  "pytest",
  "pytest-cov",
  "setuptools-scm",
]
doc = [
  "numpydoc",
  "pydata-sphinx-theme>=0.13",
  "sphinx",
  "sphinx-design",
  "sphinx-favicon",
  "sphinxcontrib-towncrier",
  # unpin when sphinxcontrib-towncrier support more recent version to towncrier
  "towncrier<24",
]
dev = [
  "black",
  "holospy[doc]",
  "holospy[tests]"
]

[project.urls]
"Homepage" = "https://hyperspy.org/holospy"
"Bug Reports" = "https://github.com/hyperspy/holospy/issues"
"Source" = "https://github.com/hyperspy/holospy"

[tool.coverage.run]
branch = true
source = ["holospy"]
omit = [
  "holospy/tests/*",
  "prepare_release.py",
]

[tool.coverage.report]
precision = 2

[tool.pytest.ini_options]
#  "-ra",  # Display summary: "all except passes"
addopts = "-ra"
minversion = "6.0"
testpaths = [
  "holospy/tests",
]

[tool.ruff.lint]
select = [
    # Pyflakes
    "F",
    # Pycodestyle
    "E",
    "W",
    # isort
    "I"
]
# Rely on the formatter to define line-length
# and avoid conflicting lint rules
# https://docs.astral.sh/ruff/formatter/#conflicting-lint-rules
extend-ignore = ["E501"]

[tool.setuptools.packages.find]
include = ["holospy*"]

[tool.setuptools.package-data]
"*" = [
  "*hdf5",
  "*.yaml"
  ]

[tool.setuptools_scm]
# Presence enables setuptools_scm, the version will be determine at build time from git
# The version will be updated by the `prepare_release.py` script
fallback_version = "0.4.dev0"

[tool.towncrier]
directory = "upcoming_changes/"
filename = "CHANGES.rst"
issue_format = "`#{issue} <https://github.com/hyperspy/holospy/issues/{issue}>`_"
title_format = "{version} ({project_date})"
package_dir = "holospy"
type = [
    { directory = "new", name = "New features", showcontent = true },
    { directory = "enhancements", name = "Enhancements", showcontent = true },
    { directory = "bugfix", name = "Bug Fixes", showcontent = true },
    { directory = "api", name = "API changes", showcontent = true },
    { directory = "deprecation", name = "Deprecations", showcontent = true },
    { directory = "doc", name = "Improved Documentation", showcontent = true },
    { directory = "maintenance", name = "Maintenance", showcontent = true },
]
